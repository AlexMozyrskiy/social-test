{"version":3,"sources":["Components/common/FormsControls/ChilderenFormsControls/TextareaWithValidate.jsx","Redux/ActionCreators/preloaderActionCreator.js","img/avatars/avatar.jpg","Api/api.js","img/logo/logo.svg","Components/Header/Header.jsx","Redux/ActionTypes/setUserDataIntoStateActionType.js","Redux/ActionCreators/setUserDataIntoStateActionCreator.js","Redux/ThunkCreators/headerThunkCreators.js","Components/Header/HeaderContainer.jsx","Components/SideBar/SideBar.jsx","hoc/withAuthRedirect.js","Components/Content/DialogsPage/DialogsPageForm/DialogsPageForm.jsx","Components/Content/DialogsPage/DialogsPageForm/DialogsPageClassFormContainer.jsx","Redux/ActionTypes/dialogsPageActionTypes.js","Components/Content/DialogsPage/DialogsPageForm/DialogsPageFormConnectContainer.jsx","Redux/ThunkCreators/dialogsPageThunkCreator.js","Redux/ActionCreators/dialogsPageActionCreator.js","Components/Content/DialogsPage/DialogsPageUsersAndMessagesList/DialogsPageMessagesList/DialogsPageMessagesList.jsx","Components/Content/DialogsPage/DialogsPageUsersAndMessagesList/DialogsPageMessagesList/DialogsPageMessagesListContainer.jsx","Components/Content/DialogsPage/DialogsPageUsersAndMessagesList/DialogsPageUsersList/DialogsPageUsersList.jsx","Components/Content/DialogsPage/DialogsPageUsersAndMessagesList/DialogsPageUsersList/DialogsPageUsersListContainer.jsx","Components/Content/DialogsPage/DialogsPageUsersAndMessagesList/DialogsPageUsersAndMessagesList.jsx","Components/Content/DialogsPage/DialogsPage.jsx","Components/Content/MusicPage/MusicPage.jsx","Components/Content/NewsPage/NewsPage.jsx","Components/Content/SettingsPage/SettingsPage.jsx","Components/Content/UsersPage/UsersPage.jsx","Redux/ActionTypes/usersPageActionTypes.js","Redux/ActionCreators/usersPageActionCreators.js","utils/Selectors/usersPageSelectors.js","Components/Content/UsersPage/UsersPageContainer.jsx","Redux/ThunkCreators/usersPageThunkCreator.js","Components/common/FormsControls/ChilderenFormsControls/InputWithValidate.jsx","Components/Content/LoginPage/LoginPageForm/LoginPageReduxForm.jsx","Components/Content/LoginPage/LoginPage.jsx","Redux/ActionTypes/loginPageActionTypes.js","Redux/ActionCreators/loginPageActionCreators.js","Components/Content/LoginPage/LoginPageForm/LoginPageFormContainer.jsx","Redux/ThunkCreators/loginPageThunkCreator.js","Redux/ActionTypes/initializedAppActionType.js","App.js","hoc/withLazySuspense.js","Redux/ThunkCreators/initializedAppThunkCreator.js","Redux/ActionCreators/initializedAppActionCreator.js","reportWebVitals.js","Redux/Reducers/profilePageReducer.js","Redux/Reducers/dialogsPageReducer.js","Redux/Reducers/sideBarReducer.js","Redux/Reducers/usersPageReducer.js","Redux/Reducers/preloaderReducer.js","Redux/Reducers/setUserDataIntoStateReducer.js","Redux/Reducers/initializedAppSuccesReducer.js","Redux/Reducers/loginPageReducer.js","Redux/redux-store.js","index.js","utils/validators/validators.js","Components/common/Preloader/Preloader.jsx","Redux/ActionTypes/profilePageActionTypes.js","Redux/ActionTypes/preloaderActionType.js"],"names":["TextareaWithValidate","input","meta","props","className","error","touched","preloaderActive","isActive","type","IS_PRELOADER_ACTIVE","axiosInstance","axios","withCredentials","baseURL","headers","usersPageAPI","getUsers","currentPage","usersPerPage","get","then","response","data","unFollowUser","id","delete","followUser","post","profilePageAPI","getUserForProfilePage","getUserStatus","updateStatus","status","put","headerAPI","isAuth","loginAPI","login","email","password","rememberMe","captcha","logout","getCaptcha","url","Header","src","logo","alt","isLoggedIn","to","onClick","headerIsLogoutThunkCreator","SET_USER_DATA_INTO_STATE","UN_SET_USER_DATA_INTO_STATE","setUserDataIntoState","headerIsAuthThunkCreator","dispatch","a","resultCode","HeaderContainer","this","React","Component","connect","state","auth","SideBar","myId","activeClassName","mapStateToProps","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","requiredField","DialogsPageClassFormContainer","formData","dialogsPageSetMessageIntoStateThunkCreator","message","bind","ADD_DIALOGS_POST","UPDATE_DIALOGS_TYPING_TEXTAREA","mapDispatchToProps","dialogsPageSetMessageIntoState","DialogsPageMessagesList","messagesList","DialogsPageMessagesListContainer","dialogsPage","messages","map","text","DialogsPageUsersList","usersList","DialogsPageUsersListContainer","users","user","DialogsPageUsersAndMessagesList","compose","DialogsPageFormConnectContainer","MusicPage","NewsPage","SettingsPage","UsersPage","paginationPointsCountAll","Math","ceil","allInBaseUsersCount","paginationPointsSpanArray","i","push","OnClickPaginationChangeThunkCreator","firstPaginationButtonNum","lastPaginationButtonNum","isPreloaderActive","Preloader","usersPageUsers","photos","small","large","avatar","followed","disabled","buttonFollowDisabledUsersIdArray","some","unFollowUserThunkCreator","followUserThunkCreator","USERS_PAGE_FOLLOW_USER_ACTION_TYPE","USERS_PAGE_UNFOLLOW_USER_ACTION_TYPE","USERS_PAGE_SET_USERS_INTO_STATE_ACTION_TYPE","USERS_PAGE_SET_NEW_CURRENT_PAGE_ACTION_TYPE","USERS_PAGE_SET_NEW_USERS_COUNT_ACTION_TYPE","USERS_PAGE_SET_USERS_COUNT_IN_BASE_ACTION_TYPE","USERS_PAGE_IS_PRELOADER_ACTIVE","USERS_PAGE_BUTTON_FOLLOWED_DISABLED_ACTION_TYPE","USERS_PAGE_SET_NEW_PAGINATION_FIRST_PAGE_NUM","USERS_PAGE_SET_NEW_PAGINATION_LAST_PAGE_NUM","usersPageFollowUser","userId","usersPageActionTypes","usersPageUnFollowUser","usersPageSetUsersIntoState","usersPageSetNewCurrentPage","pageNumber","usersPageSetNewUsersCount","usersCount","usersPageButtonFollowDisabled","isButtonFollowClicked","getUsersSuperSelector","createSelector","usersPage","filter","getUsersPerPageSelector","getCurrentPageSelector","getUsersCountSelector","getAllInBaseUsersCountSelector","getButtonFollowDisabledUsersIdArraySelector","buttonFollowDisabled","getPaginationPointsToDisplaySelector","paginationPointsToDisplay","getFirstPaginationButtonNum","getLastPaginationButtonNum","UsersPageDBQuery","getUsersThunkCreator","firstPageNum","lastPageNum","setNewPaginationFirstAndLastButtonsIntoState","lpsOnClickPaginationChange","getFirstLastPaginationButtonNum","localState","items","usersCountAllInBase","totalCount","usersCountToDisplay","pageNum","usersPageSetNewPaginationLastPage","InputWithValidate","isCaptchaActive","captchaURL","LoginPage","SET_CAPTCHA_INTO_STATE","UN_SET_CAPTCHA_INTO_STATE","setCaptchaIntoStateActionCreator","LoginPageFormContainer","loginPageLoginThunkCreator","errorMessge","length","stopSubmit","_error","loginForm","loginPage","isCapthaActive","INITIALIZED_APP","ProfilePage","lazy","App","initializedAppThunkCreator","isAppInitialized","path","render","Suspense","fallback","DialogsPage","UsersPageContainer","initializedApp","isInizializeApp","dispatchResult","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","posts","fullName","aboutMe","lookingForAJob","typingMessage","profilePageReducer","action","ADD_PROFILE_POST","superState","UPDATE_PROFILE_TYPING_TEXTAREA","PROFILE_PAGE_SET_USER_INTO_STATE","PROFILE_PAGE_IS_PRELOADER_ACTIVE","PROFILE_PAGE_SET_USER_STATUS_INTO_STATE","dialogsPageReducer","myFriends","sideBarReducer","usersPageReducer","preloaderActiveReducer","setUserDataIntoStateReducer","initializedAppSuccesReducer","loginPageReducer","reducers","combineReducers","profilePage","sideBar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","basename","process","document","getElementById","value","maxLenght","PROFILE_PAGE_GET_USER_STATUS"],"mappings":"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","file":"static/js/main.f5a93cde.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TextareaWithValidate = ({input, meta, ...props}) => {   // деструктуризируем полученные данные из пропсов\r\n    return ( <div className={ meta.error && meta.touched ? \"profile-page__textarea\" : \"\"}>      {/* если ошибка добавим класс ошибки */}\r\n                <textarea {...input} {...props} />              {/* передаем Field'у вызывавшему этот компонент нужные ему данные */}\r\n                { meta.error && meta.touched && <span className=\"profile-page__error-text\">{ meta.error }</span> } {/* если ошибка добавим сообщение ошибки */}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default TextareaWithValidate;","import { IS_PRELOADER_ACTIVE } from \"./../ActionTypes/preloaderActionType\";\r\n\r\nexport const preloaderActive = (isActive) => ({ type: IS_PRELOADER_ACTIVE, isActive});","export default __webpack_public_path__ + \"static/media/avatar.7b4ac686.jpg\";","import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"9aff8b45-5e6b-4151-bfce-c962b4066e73\"\r\n    }\r\n});\r\n\r\nexport const usersPageAPI = {\r\n    getUsers(currentPage = 1, usersPerPage = 10) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${usersPerPage}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    unFollowUser(id) {\r\n        return axiosInstance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    followUser(id) {\r\n        return axiosInstance.post(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n};\r\n\r\nexport const profilePageAPI = {\r\n    getUserForProfilePage(id) {\r\n        return axiosInstance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getUserStatus(id) {\r\n        return axiosInstance.get(`profile/status/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return axiosInstance.put(`profile/status`, { status: status });\r\n    }\r\n    \r\n};\r\n\r\nexport const headerAPI = {\r\n    isAuth() {\r\n        return axiosInstance.get(\"auth/me\")\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false, captcha = false) {\r\n        return axiosInstance.post(`auth/login`, {email: email, password: password, rememberMe: rememberMe, captcha: captcha})\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    logout() {\r\n        return axiosInstance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getCaptcha() {\r\n        return axiosInstance.get(\"security/get-captcha-url\")\r\n            .then(response => {\r\n                return response.data.url;\r\n            });\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import { NavLink } from 'react-router-dom';\r\nimport logo from './../../img/logo/logo.svg';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={logo} alt=\"logo\" />\r\n            <div>{ props.isLoggedIn ? props.login : <NavLink to=\"/login\">LogIn</NavLink> }</div>\r\n            <span onClick={ props.headerIsLogoutThunkCreator }>{ props.isLoggedIn && \"Log Out\" }</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","export const SET_USER_DATA_INTO_STATE = \"SET-USER-DATA-INTO-STATE\";\r\nexport const UN_SET_USER_DATA_INTO_STATE = \"UN-SET-USER-DATA-INTO-STATE\";","import { SET_USER_DATA_INTO_STATE, UN_SET_USER_DATA_INTO_STATE } from \"../ActionTypes/setUserDataIntoStateActionType\";\r\n\r\nexport const setUserDataIntoState = (email, id, login, isLoggedIn) => ({type: SET_USER_DATA_INTO_STATE, data: {email, id, login, isLoggedIn}});\r\nexport const unSetUserDataIntoState = () => ({type: UN_SET_USER_DATA_INTO_STATE});","import { headerAPI } from \"./../../Api/api\";\r\nimport { loginAPI } from \"./../../Api/api\";\r\nimport { setUserDataIntoState, unSetUserDataIntoState } from \"./../ActionCreators/setUserDataIntoStateActionCreator\";\r\nimport { preloaderActive } from \"./../../Redux/ActionCreators/preloaderActionCreator\";\r\n\r\n\r\nexport const headerIsAuthThunkCreator = () => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    const data = await headerAPI.isAuth();\r\n\r\n    dispatch(preloaderActive(false));\r\n\r\n    if (data.resultCode === 0) {\r\n        const { email, id, login } = data.data;\r\n        const isLoggedIn = true;\r\n        dispatch(setUserDataIntoState(email, id, login, isLoggedIn));\r\n    }\r\n}\r\n\r\nexport const headerIsLogoutThunkCreator = () => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    const data = await loginAPI.logout();\r\n    \r\n    dispatch(preloaderActive(false));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(unSetUserDataIntoState());\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { preloaderActive } from \"./../../Redux/ActionCreators/preloaderActionCreator\";\r\nimport { setUserDataIntoState } from \"./../../Redux/ActionCreators/setUserDataIntoStateActionCreator\";\r\nimport { headerIsLogoutThunkCreator } from \"./../../Redux/ThunkCreators/headerThunkCreators\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Header { ...this.props }/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        id: state.auth.id,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    preloaderActive, setUserDataIntoState, headerIsLogoutThunkCreator\r\n})(HeaderContainer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass SideBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"side-bar\">\r\n                <ul className=\"side-bar__links\">\r\n                    <li className=\"side-bar__single__link\"><NavLink to={`/profile/${this.props.myId}`} className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">Profile</NavLink></li>\r\n                    <li className=\"side-bar__single__link\"><NavLink to='/login' className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">Login</NavLink></li>\r\n                    <li className=\"side-bar__single__link\"><NavLink to='/dialogs' className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">Messages</NavLink></li>\r\n                    <li className=\"side-bar__single__link\"><NavLink to='/news' className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">News</NavLink></li>\r\n                    <li className=\"side-bar__single__link\"><NavLink to='/music' className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">Music</NavLink></li>\r\n                    <li className=\"side-bar__single__link\"><NavLink to='/users' className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">Users</NavLink></li>\r\n                    <li className=\"side-bar__single__link\"><NavLink to='/settings' className=\"side-bar__single__link-a\" activeClassName=\"side-bar__single__link-active\">Settings</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        myId: state.auth.id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SideBar);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const withAuthRedirectContainer = (props) => {\r\n        if(!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n        return <Component {...props} />;\r\n    }\r\n\r\n    return connect(mapStateToProps)(withAuthRedirectContainer);\r\n}","import { Field, reduxForm } from \"redux-form\";\r\nimport TextareaWithValidate from \"../../../common/FormsControls/ChilderenFormsControls/TextareaWithValidate\";\r\nimport { requiredField, maxLengthCreator } from \"./../../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst DialogsPageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"dialogs-page__form\">\r\n            <Field component={TextareaWithValidate} name=\"message\" className=\"dialogs-page__textarea\" placeholder=\"Type Your Message\" validate={[requiredField, maxLength100]} />\r\n            <button>Send Message</button>\r\n            {/* <textarea className=\"dialogs-page__textarea\" placeholder=\"Type Your Message\" onChange={typingMessageForRewriting} value={ props.typingMessage }></textarea>\r\n            <button className=\"dialogs-page__button\" onClick={ props.dialogsPageSavePostInState }>Send Mrssage</button> */}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"dialogsPageForm\"\r\n})(DialogsPageForm);","import React from \"react\";\r\nimport DialogsPageForm from \"./DialogsPageForm\";\r\n\r\nclass DialogsPageClassFormContainer extends React.Component {\r\n\r\n    onSubmit(formData) {\r\n        this.props.dialogsPageSetMessageIntoStateThunkCreator(formData.message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DialogsPageForm\r\n                onSubmit={this.onSubmit.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogsPageClassFormContainer;\r\n\r\n\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         typingMessage: state.dialogsPage.typingMessage\r\n//     };\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         dialogsPageRewriteTypingMessageInState: (text) => {\r\n//             dispatch(updateDialogsTypingTextareaActionCreator(text));\r\n//         },\r\n//         dialogsPageSavePostInState: () => {\r\n//             dispatch(addDialogsPostActionCreator());\r\n//         }\r\n//     };\r\n// }\r\n\r\n// const DialogsPageFormContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsPageForm);\r\n\r\n// export default DialogsPageFormContainer;","export const ADD_DIALOGS_POST = 'ADD-DIALOGS-POST';\r\nexport const UPDATE_DIALOGS_TYPING_TEXTAREA = 'UPDATE-DIALOGS-TYPING-TEXTAREA';","import DialogsPageClassFormContainer from \"./DialogsPageClassFormContainer\";\r\nimport { dialogsPageSetMessageIntoStateThunkCreator } from \"./../../../../Redux/ThunkCreators/dialogsPageThunkCreator\";\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dialogsPageSetMessageIntoStateThunkCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsPageClassFormContainer);","import { dialogsPageSetMessageIntoState } from \"./../ActionCreators/dialogsPageActionCreator\";\r\n\r\n\r\nexport const dialogsPageSetMessageIntoStateThunkCreator = (message) => (dispatch) => {\r\n    dispatch(dialogsPageSetMessageIntoState(message));\r\n}","import {ADD_DIALOGS_POST, UPDATE_DIALOGS_TYPING_TEXTAREA} from './../ActionTypes/dialogsPageActionTypes';\r\n\r\nexport const dialogsPageSetMessageIntoState = (message) => ({ type: ADD_DIALOGS_POST, message });\r\nexport const updateDialogsTypingTextareaActionCreator = (text) => ({ type: UPDATE_DIALOGS_TYPING_TEXTAREA, typingMessage: text });","const DialogsPageMessagesList = (props) => {\r\n    return (\r\n        <ul className=\"dialogs-page__messages\">\r\n            { props.messagesList }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default DialogsPageMessagesList;","import DialogsPageMessagesList from \"./DialogsPageMessagesList\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    const messagesList = state.dialogsPage.messages.map(message => <li key={ message.id } className=\"dialogs-page__single-message\">{ message.text }</li>);\r\n\r\n    return {\r\n        messagesList: messagesList\r\n    };\r\n}\r\n\r\nconst DialogsPageMessagesListContainer = connect(mapStateToProps)(DialogsPageMessagesList);\r\n\r\nexport default DialogsPageMessagesListContainer;","const DialogsPageUsersList = (props) => {\r\n    return (\r\n        <ul className=\"dialogs-page__users\">\r\n            { props.usersList }            \r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default DialogsPageUsersList;","import { NavLink } from \"react-router-dom\";\r\nimport DialogsPageUsersList from \"./DialogsPageUsersList\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const usersList = state.dialogsPage.users.map(user => <li key={ user.id } className=\"dialogs-page__single-user\"><NavLink to= { \"/dialogs/\" + user.id } className=\"dialogs-page__single-user-a\" activeClassName=\"dialogs-page__single-user-a-active\">{ user.name }</NavLink></li>);\r\n\r\n    return {\r\n        usersList: usersList\r\n    };\r\n}\r\n\r\nconst DialogsPageUsersListContainer = connect(mapStateToProps)(DialogsPageUsersList);\r\n\r\nexport default DialogsPageUsersListContainer;","import DialogsPageMessagesListContainer from \"./DialogsPageMessagesList/DialogsPageMessagesListContainer\";\r\nimport DialogsPageUsersListContainer from \"./DialogsPageUsersList/DialogsPageUsersListContainer\";\r\n\r\nconst DialogsPageUsersAndMessagesList = () => {\r\n    return (\r\n        <div className=\"dialogs-page__wrapper\">\r\n            \r\n            <DialogsPageUsersListContainer />\r\n\r\n            <DialogsPageMessagesListContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsPageUsersAndMessagesList;","import { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport DialogsPageFormConnectContainer from \"./DialogsPageForm/DialogsPageFormConnectContainer\";\r\nimport DialogsPageUsersAndMessagesList from \"./DialogsPageUsersAndMessagesList/DialogsPageUsersAndMessagesList\";\r\n\r\nconst dialogsPage = () => {\r\n    return (\r\n        <div className=\"dialogs-page\">\r\n\r\n            <h2 className=\"dialogs\">Dialogs</h2>\r\n\r\n            <DialogsPageUsersAndMessagesList />\r\n\r\n            <DialogsPageFormConnectContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect\r\n)(dialogsPage);","const MusicPage = () => {\r\n    return (\r\n        <div>MusicPage</div>\r\n    );\r\n};\r\n\r\nexport default MusicPage;","const NewsPage = () => {\r\n    return (\r\n        <div>NewsPage</div>\r\n    );\r\n};\r\n\r\nexport default NewsPage;","const SettingsPage = () => {\r\n    return (\r\n        <div>SettingsPage</div>\r\n    );\r\n};\r\n\r\nexport default SettingsPage;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport avatar from \"./../../../img/avatars/avatar.jpg\";\r\nimport Preloader from \"./../../common/Preloader/Preloader\";\r\n\r\nconst UsersPage = (props) => {\r\n    // const paginationPointsCount = Math.ceil(props.usersCount / props.usersPerPage); // сколько страниц в пагинации\r\n    const paginationPointsCountAll = Math.ceil(props.allInBaseUsersCount / props.usersPerPage); // сколько страниц в пагинации с учетом количества всех пользователй в базе\r\n    const paginationPointsSpanArray = [];\r\n    // for (let i = 1; i <= paginationPointsCount; i++) {          // превратим в массив количество страниц пагинации для его мапа в двльнейшем при отрисовке кнопок пагинации\r\n    //     paginationPointsCountArray.push(i);\r\n    // }\r\n    for (let i = props.firstPaginationButtonNum; i <= props.lastPaginationButtonNum; i++) {          // превратим в массив количество страниц пагинации для его мапа в двльнейшем при отрисовке кнопок пагинации\r\n        paginationPointsSpanArray.push(\r\n            <span\r\n                className={props.currentPage === i ? \"users-page__pagination-point users-page__pagination-point-current\" : \"users-page__pagination-point\"}\r\n                onClick={() => { props.OnClickPaginationChangeThunkCreator(i, props.usersPerPage) }}\r\n                key={i}>\r\n                {i}\r\n            </span>);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            { props.isPreloaderActive ? <Preloader /> : null}\r\n\r\n            <div className=\"users-page__pagination-points-wrapper\">\r\n                {props.currentPage === 1 ? null : <button onClick={() => { props.OnClickPaginationChangeThunkCreator((props.currentPage - 1), props.usersPerPage) }}>Prev</button>}   { /* если на первой странице не отображать кнопку назад */}\r\n                {paginationPointsSpanArray}\r\n                {props.currentPage === paginationPointsCountAll ? null : <button onClick={() => { props.OnClickPaginationChangeThunkCreator((props.currentPage + 1), props.usersPerPage) }}>Next</button>}       { /* если на последней странице не отображать кнопку вперед */}\r\n            </div>\r\n\r\n            <ul className=\"users-page__users content\">\r\n                {\r\n                    props.usersPageUsers.map(user => (\r\n                        <li className=\"users-page__single-user\" key={user.id}>\r\n                            <div className=\"users-page__avatar-follow\">\r\n                                <NavLink to={'/profile/' + user.id}><img src={user.photos.small != null ? user.photos.large : avatar} alt=\"avatar\" className=\"users-page__avatar\" /></NavLink>\r\n\r\n                                {\r\n                                    user.followed ?\r\n                                        <button className=\"users-page__follow-button\" disabled={props.buttonFollowDisabledUsersIdArray.some(id => id === user.id) ? true : false}\r\n                                            onClick={() => {\r\n                                                props.unFollowUserThunkCreator(user.id);\r\n                                            }}>Unfollow</button>\r\n\r\n                                        :\r\n\r\n                                        <button className=\"users-page__follow-button\" disabled={props.buttonFollowDisabledUsersIdArray.some(id => id === user.id) ? true : false}\r\n                                            onClick={() => {\r\n                                                props.followUserThunkCreator(user.id);\r\n                                            }}>Follow</button>\r\n                                }\r\n\r\n                            </div>\r\n                            <div className=\"users-page__user-info\">\r\n                                <div className=\"users-page__name-status\">\r\n                                    <h3 className=\"users-page__user-name\">{user.name}</h3>\r\n                                    <p className=\"users-page__user-status\">{user.status}</p>\r\n                                </div>\r\n                                <div className=\"users-page__user-location\">\r\n                                    <h2 className=\"users-page__user-country\">{\"user.location.country\"}</h2>\r\n                                    <h3 className=\"users-page__user-city\">{\"user.location.city\"}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </li>))\r\n                }\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default UsersPage;","export const USERS_PAGE_FOLLOW_USER_ACTION_TYPE = 'USERS-PAGE-FOLLOW-USER';\r\nexport const USERS_PAGE_UNFOLLOW_USER_ACTION_TYPE = 'USERS-PAGE-UNFOLLOW-USER';\r\nexport const USERS_PAGE_SET_USERS_INTO_STATE_ACTION_TYPE = 'USERS-PAGE-SET-USERS-INTO-STATE';\r\nexport const USERS_PAGE_SET_NEW_CURRENT_PAGE_ACTION_TYPE = 'USERS-PAGE-SET-NEW-CURRENT-PAGE-ACTION-TYPE';\r\nexport const USERS_PAGE_SET_NEW_USERS_COUNT_ACTION_TYPE = 'USERS-PAGE-SET-NEW-USERS-COUNT-ACTION-TYPE';             // юзеров с учетом сколько кнопок пагинации показывать\r\nexport const USERS_PAGE_SET_USERS_COUNT_IN_BASE_ACTION_TYPE = 'USERS-PAGE-SET-USERS-COUNT-IN-BASE-ACTION-TYPE';   // всего юзеров в базе\r\nexport const USERS_PAGE_IS_PRELOADER_ACTIVE = 'USERS-PAGE-IS-PRELOADER-ACTIVE';\r\nexport const USERS_PAGE_BUTTON_FOLLOWED_DISABLED_ACTION_TYPE = 'USERS-PAGE-BUTTON-FOLLOWED-DISABLED';\r\nexport const USERS_PAGE_SET_NEW_PAGINATION_FIRST_PAGE_NUM = 'USERS-PAGE-SET-NEW-PAGINATION-FIRST-PAGE-NUM';\r\nexport const USERS_PAGE_SET_NEW_PAGINATION_LAST_PAGE_NUM = 'USERS-PAGE-SET-NEW-PAGINATION-LAST-PAGE-NUM';","import * as usersPageActionTypes from '../ActionTypes/usersPageActionTypes';\r\n\r\nexport const usersPageFollowUser = (userId) => ({ type: usersPageActionTypes.USERS_PAGE_FOLLOW_USER_ACTION_TYPE, userId: userId });\r\nexport const usersPageUnFollowUser = (userId) => ({ type: usersPageActionTypes.USERS_PAGE_UNFOLLOW_USER_ACTION_TYPE, userId: userId });\r\nexport const usersPageSetUsersIntoState = (users) => ({ type: usersPageActionTypes.USERS_PAGE_SET_USERS_INTO_STATE_ACTION_TYPE, users: users });\r\nexport const usersPageSetNewCurrentPage = (pageNumber) => ({ type: usersPageActionTypes.USERS_PAGE_SET_NEW_CURRENT_PAGE_ACTION_TYPE, pageNumber: pageNumber });\r\nexport const usersPageSetNewUsersCount = (usersCount) => ({ type: usersPageActionTypes.USERS_PAGE_SET_NEW_USERS_COUNT_ACTION_TYPE, usersCount });\r\nexport const usersPageSetAllInBaseUsersCountIntoState = (allInBaseUsersCount) => ({ type: usersPageActionTypes.USERS_PAGE_SET_USERS_COUNT_IN_BASE_ACTION_TYPE, allInBaseUsersCount });\r\nexport const usersPageIsPreloaderActive = (isPreloaderActive) => ({ type: usersPageActionTypes.USERS_PAGE_IS_PRELOADER_ACTIVE, isPreloaderActive });\r\nexport const usersPageButtonFollowDisabled = (isButtonFollowClicked, userId) => ({ type: usersPageActionTypes.USERS_PAGE_BUTTON_FOLLOWED_DISABLED_ACTION_TYPE, isButtonFollowClicked, userId });\r\nexport const usersPageSetNewPaginationFirstPage = (pageNum) => ({ type: usersPageActionTypes.USERS_PAGE_SET_NEW_PAGINATION_FIRST_PAGE_NUM, pageNum });\r\nexport const usersPageSetNewPaginationLastPage = (pageNum) => ({ type: usersPageActionTypes.USERS_PAGE_SET_NEW_PAGINATION_LAST_PAGE_NUM, pageNum });","// const basePart = state.usersPage\r\n\r\nimport { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(user => true);\r\n});\r\n\r\nexport const getUsersPerPageSelector =  (state) => {\r\n    return state.usersPage.usersPerPage;\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getUsersCountSelector = (state) => {\r\n    return state.usersPage.usersCount;\r\n}\r\n\r\nexport const getAllInBaseUsersCountSelector = (state) => {\r\n    return state.usersPage.allInBaseUsersCount;\r\n}\r\n\r\nexport const getButtonFollowDisabledUsersIdArraySelector = (state) => {\r\n    return state.usersPage.buttonFollowDisabled;\r\n}\r\n\r\nexport const getPaginationPointsToDisplaySelector = (state) => {\r\n    return state.usersPage.paginationPointsToDisplay;\r\n}\r\n\r\nexport const getFirstPaginationButtonNum = (state) => {\r\n    return state.usersPage.firstPaginationButtonNum;\r\n}\r\n\r\nexport const getLastPaginationButtonNum = (state) => {\r\n    return state.usersPage.lastPaginationButtonNum;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport { usersPageSetUsersIntoState, usersPageSetNewCurrentPage, usersPageSetNewUsersCount } from \"../../../Redux/ActionCreators/usersPageActionCreators\";\r\nimport { preloaderActive } from \"./../../../Redux/ActionCreators/preloaderActionCreator\";\r\nimport {\r\n    getUsersThunkCreator, followUserThunkCreator,\r\n    unFollowUserThunkCreator, OnClickPaginationChangeThunkCreator,\r\n    setNewPaginationFirstAndLastButtonsIntoState\r\n} from \"./../../../Redux/ThunkCreators/usersPageThunkCreator\";\r\n// import { withAuthRedirect } from \"./../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    getUsersSuperSelector, getUsersPerPageSelector, getCurrentPageSelector,\r\n    getUsersCountSelector, getButtonFollowDisabledUsersIdArraySelector,\r\n    getAllInBaseUsersCountSelector, getPaginationPointsToDisplaySelector,\r\n    getFirstPaginationButtonNum, getLastPaginationButtonNum\r\n} from \"./../../../utils/Selectors/usersPageSelectors\";\r\n\r\nclass UsersPageDBQuery extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.usersPerPage);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.currentPage < this.props.firstPaginationButtonNum) {\r\n            const firstPageNum = this.props.currentPage;\r\n            const lastPageNum = this.props.currentPage + 9;\r\n            this.props.setNewPaginationFirstAndLastButtonsIntoState(firstPageNum, lastPageNum);\r\n        } else if(this.props.currentPage > this.props.lastPaginationButtonNum) {\r\n            const firstPageNum = this.props.currentPage - 9;\r\n            const lastPageNum = this.props.currentPage;\r\n            this.props.setNewPaginationFirstAndLastButtonsIntoState(firstPageNum, lastPageNum);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <UsersPage\r\n            // usersCount={this.props.usersCount}\r\n            // usersPerPage={this.props.usersPerPage}\r\n            // usersPageSetNewCurrentPage={this.props.usersPageSetNewCurrentPage}\r\n            // usersPerPage={this.props.usersPerPage}\r\n            // usersPageSetUsersIntoState={this.props.usersPageSetUsersIntoState}\r\n            // currentPage={this.props.currentPage}\r\n            // usersPageUsers={this.props.usersPageUsers}\r\n            // usersPageUnFollowUser={this.props.usersPageUnFollowUser}\r\n            // usersPageFollowUser={this.props.usersPageFollowUser}\r\n            lpsOnClickPaginationChange={this.lpsOnClickPaginationChange}\r\n            paginationPointsSpanArray={this.paginationPointsSpanArray}\r\n            getFirstLastPaginationButtonNum={this.getFirstLastPaginationButtonNum}\r\n            localState={this.state}\r\n            // isPreloaderActive={this.props.isPreloaderActive}\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // usersPageUsers: state.usersPage.users,\r\n        usersPageUsers: getUsersSuperSelector(state),\r\n        allInBaseUsersCount: getAllInBaseUsersCountSelector(state),\r\n        usersPerPage: getUsersPerPageSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        usersCount: getUsersCountSelector(state),\r\n        isPreloaderActive: state.preloaderActive.isPreloaderActive,\r\n        buttonFollowDisabledUsersIdArray: getButtonFollowDisabledUsersIdArraySelector(state),\r\n        paginationPointsToDisplay: getPaginationPointsToDisplaySelector(state),\r\n        firstPaginationButtonNum: getFirstPaginationButtonNum(state),\r\n        lastPaginationButtonNum: getLastPaginationButtonNum(state)\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    usersPageSetUsersIntoState,\r\n    // usersPageFollowUser,\r\n    // usersPageUnFollowUser,\r\n    usersPageSetNewCurrentPage,\r\n    usersPageSetNewUsersCount,\r\n    preloaderActive,\r\n    // usersPageButtonFollowDisabled,\r\n    getUsersThunkCreator,\r\n    followUserThunkCreator,\r\n    unFollowUserThunkCreator,\r\n    OnClickPaginationChangeThunkCreator,\r\n    setNewPaginationFirstAndLastButtonsIntoState\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         usersPageSetUsersIntoState: (users) => {\r\n//             dispatch(usersPageSetUsersIntoStateActionCreator(users));\r\n//         },\r\n//         usersPageFollowUser: (userId) => {\r\n//             dispatch(usersPageFollowUserActionCreator(userId));\r\n//         },\r\n//         usersPageUnFollowUser: (userId) => {\r\n//             dispatch(usersPageUnFollowUserActionCreator(userId));\r\n//         },\r\n//         usersPageSetNewCurrentPage: (pageNumber) => {\r\n//             dispatch(usersPageSetNewCurrentPageActionCreator(pageNumber));\r\n//         },\r\n//         usersPageSetNewUsersCount: (usersCount) => {\r\n//             dispatch(usersPageSetNewUsersCountActionCreator(usersCount));\r\n//         },\r\n//         preloaderActive: (isPreloaderActive) => {\r\n//             dispatch(preloaderActiveActionCreator(isPreloaderActive));\r\n//         }\r\n//     };\r\n// }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // withAuthRedirect\r\n)(UsersPageDBQuery);","import { preloaderActive } from \"./../../Redux/ActionCreators/preloaderActionCreator\";\r\nimport { usersPageAPI } from \"./../../Api/api\";\r\nimport {\r\n    usersPageSetUsersIntoState, usersPageFollowUser, usersPageUnFollowUser,\r\n    usersPageSetNewCurrentPage, usersPageSetNewUsersCount, usersPageButtonFollowDisabled,\r\n    usersPageSetAllInBaseUsersCountIntoState,usersPageSetNewPaginationFirstPage,\r\n    usersPageSetNewPaginationLastPage\r\n} from \"./../../Redux/ActionCreators/usersPageActionCreators\";\r\n\r\nexport const getUsersThunkCreator = (currentPage, usersPerPage) => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    const data = await usersPageAPI.getUsers(currentPage, usersPerPage);\r\n\r\n    dispatch(preloaderActive(false));\r\n\r\n    dispatch(usersPageSetUsersIntoState(data.items));\r\n\r\n    const usersCountAllInBase = data.totalCount;\r\n    const usersCountToDisplay = data.totalCount > 30 ? 30 : data.totalCount;     // если зарегистрированных юзер много сделаем кнопки пагинации для первых 30\r\n\r\n    // if (data.totalCount > 50) {         // если зарегистрированных юзер много сделаем кнопки пагинации для первых 50\r\n    //     data.totalCount = 50\r\n    // };\r\n\r\n    dispatch(usersPageSetAllInBaseUsersCountIntoState(usersCountAllInBase));\r\n    dispatch(usersPageSetNewUsersCount(usersCountToDisplay));\r\n}\r\n\r\nexport const followUserThunkCreator = (userId) => async (dispatch) => {\r\n    dispatch(usersPageButtonFollowDisabled(true, userId));\r\n\r\n    const data = await usersPageAPI.followUser(userId);\r\n\r\n    dispatch(usersPageButtonFollowDisabled(false, userId));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(usersPageFollowUser(userId));\r\n    }\r\n}\r\n\r\nexport const unFollowUserThunkCreator = (userId) => async (dispatch) => {\r\n    dispatch(usersPageButtonFollowDisabled(true, userId));\r\n\r\n    const data = await usersPageAPI.unFollowUser(userId);\r\n\r\n    dispatch(usersPageButtonFollowDisabled(false, userId));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(usersPageUnFollowUser(userId));\r\n    }\r\n}\r\n\r\nexport const OnClickPaginationChangeThunkCreator = (pageNumber, usersPerPage) => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    dispatch(usersPageSetNewCurrentPage(pageNumber));       // перерисуем страницу\r\n\r\n    const data = await usersPageAPI.getUsers(pageNumber, usersPerPage);\r\n\r\n    dispatch(preloaderActive(false));\r\n    \r\n    dispatch(usersPageSetUsersIntoState(data.items));\r\n}\r\n\r\nexport const setNewPaginationFirstAndLastButtonsIntoState = (firstPageNum, lastPageNum) => (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    dispatch(usersPageSetNewPaginationFirstPage(firstPageNum));\r\n    dispatch(usersPageSetNewPaginationLastPage(lastPageNum));\r\n\r\n    dispatch(preloaderActive(false));\r\n}","import React from \"react\";\r\n\r\nconst InputWithValidate = ({input, meta, ...props}) => {   // деструктуризируем полученные данные из пропсов\r\n    return ( <div className={ meta.error && meta.touched ? \"profile-page__textarea\" : \"\"}>      {/* если ошибка добавим класс ошибки */}\r\n                <input {...input} {...props} />              {/* передаем Field'у вызывавшему этот компонент нужные ему данные */}\r\n                { meta.error && meta.touched && <span className=\"profile-page__error-text\">{ meta.error }</span> } {/* если ошибка добавим сообщение ошибки */}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default InputWithValidate;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { requiredField } from \"../../../../utils/validators/validators\";\r\nimport InputWithValidate from \"../../../common/FormsControls/ChilderenFormsControls/InputWithValidate\";\r\n\r\nconst LoginPageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={InputWithValidate} name=\"login\" type=\"text\" placeholder=\"Enter your Login\" validate={[requiredField]} />\r\n            <Field component={InputWithValidate} name=\"password\" type=\"password\" placeholder=\"Enter your Password\" validate={[requiredField]} />\r\n            <Field component=\"input\" name=\"rememberMe\" type=\"checkbox\" /> remember me\r\n            { props.error && <p className=\"login-page__error\">{ props.error }</p> }\r\n            { props.isCaptchaActive &&\r\n                <div>\r\n                    <img src={props.captchaURL} alt=\"captcha\"></img>\r\n                    <Field component={InputWithValidate} name=\"captcha\" type=\"text\" placeholder=\"Enter symbols on picture\" validate={[requiredField]} />\r\n                </div>\r\n            } \r\n            <button>Login</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default \r\n    reduxForm({\r\n        // a uniq name for the form\r\n        form: \"login\"\r\n    })\r\n(LoginPageForm);","import React from \"react\"\r\nimport LoginReduxForm from \"./LoginPageForm/LoginPageReduxForm\";\r\n\r\nconst LoginPage = (props) => {\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h2>Login</h2>\r\n\r\n            <LoginReduxForm\r\n                {...props}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","export const SET_CAPTCHA_INTO_STATE = \"SET-CAPTCHA-INTO-STATE\";\r\nexport const UN_SET_CAPTCHA_INTO_STATE = \"UN-SET-CAPTCHA-INTO-STATE\";","import { SET_CAPTCHA_INTO_STATE, UN_SET_CAPTCHA_INTO_STATE } from './../ActionTypes/loginPageActionTypes';\r\n\r\nexport const setCaptchaIntoStateActionCreator = (captchaURL) => ({ type: SET_CAPTCHA_INTO_STATE, isActive: true, captchaURL });\r\nexport const unSetCaptchaIntoStateActionCreator = () => ({ type: UN_SET_CAPTCHA_INTO_STATE, isActive: false });\r\n","import React from \"react\";\r\nimport LoginPage from \"./../LoginPage\";\r\nimport { loginPageLoginThunkCreator } from \"./../../../../Redux/ThunkCreators/loginPageThunkCreator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginPageFormContainer extends React.Component {\r\n\r\n    onSubmit(formData) {\r\n        this.props.loginPageLoginThunkCreator(formData.login, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isLoggedIn) return <Redirect to={`/profile/${this.props.myId}`} />\r\n        return (\r\n            <LoginPage\r\n                onSubmit={this.onSubmit.bind(this)}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginForm: state.form.login,\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        myId: state.auth.id,\r\n        isCaptchaActive: state.loginPage.isCapthaActive,\r\n        captchaURL: state.loginPage.captchaURL\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loginPageLoginThunkCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPageFormContainer);","import { stopSubmit } from \"redux-form\";\r\nimport { loginAPI } from \"./../../Api/api\";\r\nimport { preloaderActive } from \"./../ActionCreators/preloaderActionCreator\"\r\nimport { headerIsAuthThunkCreator } from \"./headerThunkCreators\";\r\nimport { setCaptchaIntoStateActionCreator, unSetCaptchaIntoStateActionCreator } from \"./../ActionCreators/loginPageActionCreators\";\r\n\r\nexport const loginPageLoginThunkCreator = (login, password, rememberMe, captcha) => async (dispatch) => {\r\n\r\n    dispatch(preloaderActive(true));\r\n\r\n    if (typeof rememberMe === 'undefined') {\r\n        rememberMe = false;\r\n    }\r\n\r\n    const data = await loginAPI.login(login, password, rememberMe, captcha);\r\n\r\n    dispatch(preloaderActive(true));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(headerIsAuthThunkCreator())\r\n        dispatch(unSetCaptchaIntoStateActionCreator());\r\n    } else if (data.resultCode === 10) {             // captcha\r\n        loginAPI.getCaptcha()\r\n            .then(captchaURL => {\r\n                dispatch(setCaptchaIntoStateActionCreator(captchaURL));\r\n            })\r\n    } else {\r\n        const errorMessge = data.messages.length > 0 ? data.messages[0] : \"Some Error\";\r\n        dispatch(stopSubmit(\"login\", { _error: errorMessge }));\r\n    }\r\n\r\n    dispatch(preloaderActive(false));\r\n}\r\n\r\nexport const loginPageLogoutThunkCreator = () => async (dispatch) => {\r\n\r\n    dispatch(preloaderActive(true));\r\n\r\n    const data = await loginAPI.logout();\r\n\r\n    dispatch(preloaderActive(false));\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(headerIsAuthThunkCreator());\r\n    }\r\n}","export const INITIALIZED_APP = 'INITIALIZED-APP';","import React from \"react\";\r\nimport './App.css';\r\nimport { Route } from \"react-router-dom\";\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport SideBar from './Components/SideBar/SideBar';\r\n// import ProfilePage from './Components/Content/ProfilePage/ProfilePage';\r\nimport DialogsPage from './Components/Content/DialogsPage/DialogsPage';\r\nimport MusicPage from './Components/Content/MusicPage/MusicPage';\r\nimport NewsPage from './Components/Content/NewsPage/NewsPage';\r\nimport SettingsPage from './Components/Content/SettingsPage/SettingsPage';\r\nimport UsersPageContainer from './Components/Content/UsersPage/UsersPageContainer';\r\nimport LoginPageFormContainer from \"./Components/Content/LoginPage/LoginPageForm/LoginPageFormContainer\";\r\nimport { connect } from 'react-redux';\r\nimport { initializedAppThunkCreator } from \"./Redux/ThunkCreators/initializedAppThunkCreator\";\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\nimport { withLazySuspense } from \"./hoc/withLazySuspense\";\r\nconst ProfilePage = React.lazy( () => import('./Components/Content/ProfilePage/ProfilePage') );\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializedAppThunkCreator();\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.isAppInitialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <HeaderContainer />\r\n        <SideBar />\r\n\r\n        <Route path='/profile/:userId?' render={ withLazySuspense(ProfilePage) } />\r\n           {/* return <React.Suspense fallback={ <Preloader /> }>\r\n             <ProfilePage />\r\n           </React.Suspense> */}\r\n          \r\n        <Route path='/dialogs' render={() => <DialogsPage />} />\r\n        <Route path='/music' render={() => <MusicPage />} />\r\n        <Route path='/news' render={() => <NewsPage />} />\r\n        <Route path='/users' render={() => <UsersPageContainer />} />\r\n        <Route path='/settings' render={() => <SettingsPage />} />\r\n        <Route path='/login' render={() => <LoginPageFormContainer />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return (\r\n    {\r\n      isAppInitialized: state.initializedApp.isInizializeApp\r\n    }\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, { initializedAppThunkCreator })(App);","import React from \"react\";\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\nexport const withLazySuspense = (Component) => (props) => {\r\n    return <React.Suspense fallback={ <Preloader /> }>\r\n        <Component {...props} />\r\n    </React.Suspense>;\r\n}","import { headerIsAuthThunkCreator } from \"./headerThunkCreators\";\r\nimport { initializedAppActionCreator } from \"./../ActionCreators/initializedAppActionCreator\";\r\n\r\n\r\n\r\nexport const initializedAppThunkCreator = () => (dispatch) => {\r\n    let dispatchResult = dispatch(headerIsAuthThunkCreator());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(() => {\r\n            dispatch(initializedAppActionCreator());\r\n        });\r\n}","import { INITIALIZED_APP } from './../ActionTypes/initializedAppActionType';\r\n\r\nexport const initializedAppActionCreator = () => ({ type: INITIALIZED_APP });","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    ADD_PROFILE_POST, UPDATE_PROFILE_TYPING_TEXTAREA,\r\n    PROFILE_PAGE_SET_USER_INTO_STATE, PROFILE_PAGE_IS_PRELOADER_ACTIVE,\r\n    PROFILE_PAGE_SET_USER_STATUS_INTO_STATE\r\n} from './../ActionTypes/profilePageActionTypes';\r\n\r\nconst initialState = {\r\n    posts: [                           // DB query imitation\r\n        { id: 1, text: \"Some Post1\" },\r\n        { id: 2, text: \"Some Post2\" },\r\n        { id: 3, text: \"Some Post3\" },\r\n        { id: 4, text: \"Some Post4\" },\r\n        { id: 5, text: \"Some Post5\" },\r\n        { id: 6, text: \"Some Post6\" }\r\n    ],\r\n    user: {\r\n        id: null,\r\n        fullName: \"\",\r\n        aboutMe: \"\",\r\n        lookingForAJob: \"\",\r\n        photos: {\r\n            small: \"\",\r\n            large: \"\"\r\n        }\r\n    },\r\n    typingMessage: '',\r\n    status: \"\",\r\n    isPreloaderActive: false\r\n};\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PROFILE_POST: {\r\n            let superState = {          // создаем глубокие копии объектов и массивов, чтобы connect в контейнерной компоненте обновлял только изменившиеся данные\r\n                ...state,\r\n                posts: [...state.posts, { id: 6, text: action.text }],\r\n                typingMessage: \"\"\r\n            };\r\n            return superState;\r\n        }\r\n        case UPDATE_PROFILE_TYPING_TEXTAREA: {\r\n            let superState = {\r\n                ...state,\r\n                typingMessage: action.typingMessage\r\n            };\r\n            return superState;\r\n        }\r\n        case PROFILE_PAGE_SET_USER_INTO_STATE: {\r\n            let superState = {\r\n                ...state,\r\n                user: action.user\r\n                    // name: action.user.fullName,\r\n                    // aboutMe: action.user.aboutMe,\r\n                    // lookingForAJob: action.user.lookingForAJob\r\n            }\r\n            return superState;\r\n        }\r\n        case PROFILE_PAGE_IS_PRELOADER_ACTIVE: {\r\n            let superState = {\r\n                ...state,\r\n                isPreloaderActive: action.isPreloaderActive\r\n            }\r\n            return superState;\r\n        }\r\n        case PROFILE_PAGE_SET_USER_STATUS_INTO_STATE: {\r\n            let superState = {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;","import {ADD_DIALOGS_POST, UPDATE_DIALOGS_TYPING_TEXTAREA} from './../ActionTypes/dialogsPageActionTypes';\r\n\r\nlet initialState = {\r\n    users: [                              // DB query imitation\r\n        { id: 1, name: \"Alexey\" },\r\n        { id: 2, name: \"Tania\" },\r\n        { id: 3, name: \"Ilia\" },\r\n        { id: 4, name: \"Galina\" },\r\n        { id: 5, name: \"Vladimir\" },\r\n        { id: 6, name: \"Andrey\" }\r\n    ],\r\n    messages: [                           // DB query imitation\r\n        { id: 1, text: \"Hi\" },\r\n        { id: 2, text: \"How are you\" },\r\n        { id: 3, text: \"ok thanks\" },\r\n        { id: 4, text: \"where are you\" },\r\n        { id: 5, text: \"i'm here\" },\r\n        { id: 6, text: \"buy\" }\r\n    ],\r\n    typingMessage: ''\r\n};\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_DIALOGS_POST: {\r\n            let superState = {          // создаем глубокие копии объектов и массивов, чтобы connect в контейнерной компоненте обновлял только изменившиеся данные\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, text: action.message }],\r\n            };\r\n            return superState;\r\n        }\r\n        case UPDATE_DIALOGS_TYPING_TEXTAREA: {\r\n            let superState = {\r\n                ...state,\r\n                typingMessage: action.typingMessage\r\n            }\r\n            return superState;\r\n        };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default dialogsPageReducer;","let initialState = {\r\n    myFriends: [\r\n        { id: 1, name: \"Andrey\" },\r\n        { id: 2, name: \"Ilia\" },\r\n        { id: 3, name: \"Tania\" }\r\n    ]\r\n};\r\n\r\nlet sideBarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sideBarReducer;","import * as usersPageActionTypes from './../ActionTypes/usersPageActionTypes';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    paginationPointsToDisplay: 10,\r\n    firstPaginationButtonNum: 1,\r\n    lastPaginationButtonNum: 10,\r\n    usersPerPage: 3,\r\n    usersCount: 0,\r\n    allInBaseUsersCount: 0,\r\n    currentPage: 1,\r\n    isPreloaderActive: false,\r\n    buttonFollowDisabled: []\r\n};\r\n\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case usersPageActionTypes.USERS_PAGE_SET_USERS_INTO_STATE_ACTION_TYPE: {\r\n            let superState = {          // создаем глубокие копии объектов и массивов, чтобы connect в контейнерной компоненте обновлял только изменившиеся данные\r\n                ...state,\r\n                users: action.users\r\n            };\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_FOLLOW_USER_ACTION_TYPE: {\r\n            let superState = {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return {...user, followed: true};\r\n                    } else return user;\r\n                })\r\n            };\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_UNFOLLOW_USER_ACTION_TYPE: {\r\n            let superState = {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId) {\r\n                        return {...user, followed: false};\r\n                    } else return user;\r\n                })\r\n            };\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_SET_NEW_CURRENT_PAGE_ACTION_TYPE: {\r\n            let superState = {\r\n                ...state,\r\n                currentPage: action.pageNumber,\r\n            }\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_SET_NEW_USERS_COUNT_ACTION_TYPE: {\r\n            let superState = {\r\n                ...state,\r\n                usersCount: action.usersCount\r\n            }\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_SET_USERS_COUNT_IN_BASE_ACTION_TYPE: {      // всего юзеров в базе\r\n            let superState = {\r\n                ...state,\r\n                allInBaseUsersCount: action.allInBaseUsersCount\r\n            }\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_IS_PRELOADER_ACTIVE: {\r\n            let superState = {\r\n                ...state,\r\n                isPreloaderActive: action.isPreloaderActive\r\n            }\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_BUTTON_FOLLOWED_DISABLED_ACTION_TYPE: {\r\n            let superState = {\r\n                ...state,\r\n                buttonFollowDisabled: action.isButtonFollowClicked \r\n                    ? [...state.buttonFollowDisabled, action.userId] \r\n                    : state.buttonFollowDisabled.filter(id => id !== action.userId)\r\n            }\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_SET_NEW_PAGINATION_FIRST_PAGE_NUM: {\r\n            let superState = {\r\n                ...state,\r\n                firstPaginationButtonNum: action.pageNum\r\n            }\r\n            return superState;\r\n        }\r\n        case usersPageActionTypes.USERS_PAGE_SET_NEW_PAGINATION_LAST_PAGE_NUM: {\r\n            let superState = {\r\n                ...state,\r\n                lastPaginationButtonNum: action.pageNum\r\n            }\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default usersPageReducer;","import { IS_PRELOADER_ACTIVE } from \"./../ActionTypes/preloaderActionType\";\r\n\r\nconst initialState = {\r\n    isPreloaderActive: false\r\n}\r\n\r\nconst preloaderActiveReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case IS_PRELOADER_ACTIVE: {\r\n            let superState = {\r\n                ...state,\r\n                isPreloaderActive: action.isActive\r\n            }\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default preloaderActiveReducer;","import { SET_USER_DATA_INTO_STATE, UN_SET_USER_DATA_INTO_STATE } from './../ActionTypes/setUserDataIntoStateActionType';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isLoggedIn: false\r\n};\r\n\r\nconst setUserDataIntoStateReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA_INTO_STATE: {\r\n            let superState = {          // создаем глубокие копии объектов и массивов, чтобы connect в контейнерной компоненте обновлял только изменившиеся данные\r\n                ...state,\r\n                // ...data,\r\n                ...action.data,\r\n            };\r\n            return superState;\r\n        }\r\n        case UN_SET_USER_DATA_INTO_STATE: {\r\n            let superState = {          // создаем глубокие копии объектов и массивов, чтобы connect в контейнерной компоненте обновлял только изменившиеся данные\r\n                ...state,\r\n                login: null,\r\n                email: null,\r\n                isLoggedIn: false\r\n            };\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default setUserDataIntoStateReducer;","import { INITIALIZED_APP } from '../ActionTypes/initializedAppActionType';\r\n\r\nconst initialState = {\r\n    isInizializeApp: false\r\n}\r\n\r\nconst initializedAppSuccesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_APP: {\r\n            let superState = {\r\n                ...state,\r\n                isInizializeApp: true\r\n            }\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default initializedAppSuccesReducer;","import { SET_CAPTCHA_INTO_STATE, UN_SET_CAPTCHA_INTO_STATE } from \"./../ActionTypes/loginPageActionTypes\";\r\n\r\nconst initialState = {\r\n    isCapthaActive: false,\r\n    captchaURL: \"\"\r\n}\r\n\r\nconst loginPageReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_CAPTCHA_INTO_STATE: {\r\n            let superState = {\r\n                ...state,\r\n                isCapthaActive: true,\r\n                captchaURL: action.captchaURL\r\n            }\r\n            return superState;\r\n        }\r\n        case UN_SET_CAPTCHA_INTO_STATE: {\r\n            let superState = {\r\n                ...state,\r\n                isCapthaActive: false,\r\n                captchaURL: \"\"\r\n            }\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default loginPageReducer;","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport profilePageReducer from \"./Reducers/profilePageReducer\";\r\nimport dialogsPageReducer from \"./Reducers/dialogsPageReducer\";\r\nimport sideBarReducer from \"./Reducers/sideBarReducer\";\r\nimport usersPageReducer from \"./Reducers/usersPageReducer\";\r\nimport preloaderActiveReducer from \"./Reducers/preloaderReducer\";\r\nimport setUserDataIntoStateReducer from \"./Reducers/setUserDataIntoStateReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport initializedAppSuccesReducer from \"./Reducers/initializedAppSuccesReducer\";\r\nimport loginPageReducer from \"./Reducers/loginPageReducer\";\r\nimport { compose } from \"redux\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sideBar: sideBarReducer,\r\n    usersPage: usersPageReducer,\r\n    preloaderActive: preloaderActiveReducer,\r\n    auth: setUserDataIntoStateReducer,\r\n    initializedApp: initializedAppSuccesReducer,\r\n    loginPage: loginPageReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n  ));                                       // это для использования extension'а redux dev tools в Google Chrome\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleWare));       // это включим когда будеи деплоить проект а прошлый стор закоментируем\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './Redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\n/* BrowserRouter - обновление страниц без перезагрузки */\r\n\r\n/* Provider - для использования context - глобальное пространсвто для store, чтобы к store получили доступ все дети, \r\nчтобы store не прокидывать через props */\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    {/* <React.StrictMode> */}\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    {/* </React.StrictMode> */}\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nwindow.store = store;\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","export const requiredField = (value) => {          // поле обязательно для заполнения\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLenght) => (value) => {         // максимальная длина строки символов\r\n    if(value && value.length > maxLenght){\r\n        return `Max Lenght is ${maxLenght} symbols`;\r\n    }\r\n    return undefined;\r\n}","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","export const ADD_PROFILE_POST = 'ADD-PROFILE-POST';\r\nexport const UPDATE_PROFILE_TYPING_TEXTAREA = 'UPDATE-PROFILE-TYPING-TEXTAREA';\r\nexport const PROFILE_PAGE_SET_USER_INTO_STATE = 'PROFILE-PAGE-SET-USER-INTO-STATE';\r\nexport const PROFILE_PAGE_IS_PRELOADER_ACTIVE = 'PROFILE-PAGE-IS-PRELOADER-ACTIVE';\r\nexport const PROFILE_PAGE_GET_USER_STATUS = 'PROFILE-PAGE-GET-USER-STATUS';\r\nexport const PROFILE_PAGE_SET_USER_STATUS_INTO_STATE = 'PROFILE-PAGE-SET-USER-STATUS-INTO-STATE';","export const IS_PRELOADER_ACTIVE = 'IS-PRELOADER-ACTIVE';"],"sourceRoot":""}
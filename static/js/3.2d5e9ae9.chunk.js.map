{"version":3,"sources":["Components/Content/ProfilePage/ProfilePageForm/ProfilePageForm.jsx","Redux/ActionCreators/profilePageActionCreators.js","Components/Content/ProfilePage/ProfilePageForm/ProfilePageFormContainer.jsx","Redux/ThunkCreators/profilePageThunkCreator.js","img/posters/poster.jpg","Components/Content/ProfilePage/ProfilePagePoster/ProfilePagePoster.jsx","Components/Content/ProfilePage/ProfilePagePosts/ProfilePagePosts.jsx","Components/Content/ProfilePage/ProfilePagePosts/ProfilePagePostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Content/ProfilePage/ProfilePageUser/ProfilePageUserWithHooks.jsx","Components/Content/ProfilePage/ProfilePageUser/ProfilePageUserContainerWithHooks.jsx","Components/Content/ProfilePage/ProfilePage.jsx"],"names":["maxLength10","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","className","Field","component","TextareaWithValidate","placeholder","name","type","validate","requiredField","profilePageSetUserStatusIntoState","status","PROFILE_PAGE_SET_USER_STATUS_INTO_STATE","ProfilePageFormContainer","formData","this","profilePageSetMessageIntoStateThunkCreator","post","bind","React","Component","mapDispatchToProps","message","dispatch","text","ADD_PROFILE_POST","connect","state","ProfilePagePoster","src","poster","alt","ProfilePagePosts","posts","ProfilePagePostsContainer","profilePage","map","id","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfilePageUserWithHooks","isPreloaderActive","Preloader","user","photos","large","avatar","fullName","aboutMe","lookingForAJob","isStatusEditModeActive","autoFocus","onChange","e","changeTypingStatusInHoock","currentTarget","onBlur","deActivateEditMode","onDoubleClick","activateEditMode","userGlobalStateStatus","compose","preloaderActive","isAuth","auth","isLoggedIn","profilePageGetUserThunkCreator","userIdFromUrl","a","profilePageAPI","getUserForProfilePage","data","PROFILE_PAGE_SET_USER_INTO_STATE","profilePageGetUserStatusThunkCreator","getUserStatus","profilePageUpdateUserStatusThunkCreator","updateStatus","withRouter","useState","changeIsStatusEditModeActive","changeTypingStatus","useEffect","match","params","userId","to","ProfilePage","ProfilePageUserContainerWithHooks"],"mappings":"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","file":"static/js/3.2d5e9ae9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField } from \"../../../../utils/validators/validators\";\r\nimport TextareaWithValidate from \"../../../common/FormsControls/ChilderenFormsControls/TextareaWithValidate\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst ProfilePageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"profile-page__form\">\r\n            <Field component={TextareaWithValidate} placeholder=\"type your Post\" name=\"post\" type=\"text\" validate={[requiredField, maxLength10]} />\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({\r\n    // a uniq name for the form\r\n    form: \"profilePagePost\"\r\n})(ProfilePageForm);","import {\r\n    ADD_PROFILE_POST, UPDATE_PROFILE_TYPING_TEXTAREA,\r\n    PROFILE_PAGE_SET_USER_INTO_STATE, PROFILE_PAGE_GET_USER_STATUS,\r\n    PROFILE_PAGE_SET_USER_STATUS_INTO_STATE\r\n} from './../ActionTypes/profilePageActionTypes';\r\n\r\nexport const addProfilePost = (text) => ({ type: ADD_PROFILE_POST, text });\r\nexport const updateProfileTypingTextarea = (text) => ({ type: UPDATE_PROFILE_TYPING_TEXTAREA, typingMessage: text });\r\nexport const profilePageSetUserIntoState = (user) => ({ type: PROFILE_PAGE_SET_USER_INTO_STATE, user });\r\nexport const profilePageGetUserStatus = (id) => ({ type: PROFILE_PAGE_GET_USER_STATUS, id });\r\nexport const profilePageSetUserStatusIntoState = (status) => ({ type: PROFILE_PAGE_SET_USER_STATUS_INTO_STATE, status });","import React from \"react\";\r\nimport ProfilePageForm from './ProfilePageForm';\r\nimport { connect } from \"react-redux\";\r\nimport { profilePageSetMessageIntoStateThunkCreator } from \"./../../../../Redux/ThunkCreators/profilePageThunkCreator\";\r\n\r\nclass ProfilePageFormContainer extends React.Component {\r\n    \r\n    onSubmit(formData) {\r\n        this.props.profilePageSetMessageIntoStateThunkCreator(formData.post);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfilePageForm\r\n                {...this.props}\r\n                onSubmit={this.onSubmit.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // typingMessage: state.profilePage.typingMessage\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    profilePageSetMessageIntoStateThunkCreator,\r\n    // updateProfileTypingTextarea\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePageFormContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         typingMessage: state.profilePage.typingMessage\r\n//     };\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         profilePageSavePostInState: () => {\r\n//             dispatch(addProfilePostActionCreator());\r\n//         },\r\n//         profilePageRewriteTypingMessageInState: (text) => {\r\n//             dispatch(updateProfileTypingTextareaActionCreator(text));\r\n//         }\r\n//     };\r\n// }\r\n\r\n// const ProfilePageFormContainer = connect(mapStateToProps, mapDispatchToProps)(ProfilePageForm);\r\n\r\n// export default ProfilePageFormContainer;","import { profilePageAPI } from \"./../../Api/api\";\r\nimport { preloaderActive } from \"./../../Redux/ActionCreators/preloaderActionCreator\";\r\nimport { profilePageSetUserIntoState, profilePageSetUserStatusIntoState, addProfilePost } from \"./../../Redux/ActionCreators/profilePageActionCreators\";\r\n\r\nexport const profilePageGetUserThunkCreator = (userIdFromUrl) => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    const data = await profilePageAPI.getUserForProfilePage(userIdFromUrl);\r\n\r\n    dispatch(preloaderActive(false));\r\n\r\n    dispatch(profilePageSetUserIntoState(data));\r\n}\r\n\r\nexport const profilePageGetUserStatusThunkCreator = (userIdFromUrl) => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    const data = await profilePageAPI.getUserStatus(userIdFromUrl);\r\n\r\n    dispatch(preloaderActive(false));\r\n\r\n    dispatch(profilePageSetUserStatusIntoState(data));\r\n}\r\n\r\nexport const profilePageUpdateUserStatusThunkCreator = (status) => async (dispatch) => {\r\n    dispatch(preloaderActive(true));\r\n\r\n    await profilePageAPI.updateStatus(status);\r\n\r\n    dispatch(preloaderActive(false));\r\n\r\n    dispatch(profilePageSetUserStatusIntoState(status));\r\n}\r\n\r\nexport const profilePageSetMessageIntoStateThunkCreator = (message) => (dispatch) => {\r\n    dispatch(addProfilePost(message));\r\n}","export default __webpack_public_path__ + \"static/media/poster.0217d9ec.jpg\";","import poster from './../../../../img/posters/poster.jpg';\r\n\r\nconst ProfilePagePoster = (props) => <img src={poster} alt=\"poster\" className=\"profile-page__poster\" />\r\n\r\nexport default ProfilePagePoster;","const ProfilePagePosts = (props) => {\r\n    return (\r\n        <ul className=\"profile-page__posts\">\r\n            {props.posts}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ProfilePagePosts;","import ProfilePagePosts from './ProfilePagePosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    const posts = state.profilePage.posts.map(post => <li key={post.id} className=\"profile-page__single-post\">{ post.text }</li>);\r\n\r\n    return {\r\n        posts: posts\r\n    }\r\n};\r\n\r\nconst ProfilePagePostsContainer = connect(mapStateToProps)(ProfilePagePosts);\r\n\r\nexport default ProfilePagePostsContainer;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Preloader from \"../../../common/Preloader/Preloader\";\r\nimport avatar from \"./../../../../img/avatars/avatar.jpg\";\r\n\r\nconst ProfilePageUserWithHooks = (props) => {\r\n    return (\r\n        <div className=\"profile-page__user-grid_wrapper\">\r\n            { props.isPreloaderActive ? <Preloader /> : null}\r\n            <img src={props.user.photos.large ? props.user.photos.large : avatar} alt=\"avatar\" className=\"profile-page__avatar\" />\r\n\r\n            <div className=\"profile-page__user-info\">\r\n                <div className=\"profile-page__user-name\">Name: {props.user.fullName}</div>\r\n                <div className=\"profile-page__user-birth_day\">About Me: {props.user.aboutMe}</div>\r\n                <div className=\"profile-page__user-city\">{props.user.lookingForAJob ? 'Я ищу работу' : 'Я не ищу работу'}</div>\r\n            </div>\r\n\r\n            <div className=\"profile-page__status\">\r\n                { props.isStatusEditModeActive \r\n                ? <input type=\"text\" value={ props.status } autoFocus={true} onChange={ (e) => props.changeTypingStatusInHoock(e.currentTarget.value) } onBlur={ (e)=>props.deActivateEditMode(e.currentTarget.value) } /> \r\n                : <div onDoubleClick={ props.activateEditMode }>{ props.userGlobalStateStatus === \"\" ? \"----------\" : props.userGlobalStateStatus }</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePageUserWithHooks;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { profilePageSetUserIntoState } from \"../../../../Redux/ActionCreators/profilePageActionCreators\"\r\n// import { preloaderActive } from \"../../../../Redux/ActionCreators/preloaderActionCreator\";\r\nimport ProfilePageUserWithHooks from \"./ProfilePageUserWithHooks\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { profilePageGetUserThunkCreator, profilePageGetUserStatusThunkCreator, profilePageUpdateUserStatusThunkCreator } from \"../../../../Redux/ThunkCreators/profilePageThunkCreator\";\r\nimport { compose } from \"redux\";\r\n// import {withAuthRedirect} from \"./../../../../hoc/withAuthRedirect\";\r\n\r\n\r\nconst ProfilePageWithHooksUserContainer = (props) => {\r\n    // let stateWithUseState = useState(false);        // использовали хук useState, отправив первой значение false\r\n    // let isStatusEditModeActive = stateWithUseState[0];            // после использование useState он вернет массив с 2мя значениями: 0 значение в массиве - параметр который мы передали при сохдании хука, в данном случае false, \r\n    // let setEditMode = stateWithUseState[1];                     // 1 значение в массиве - функция, которая может менять 0 значение в массиве\r\n    let [isStatusEditModeActive, changeIsStatusEditModeActive] = useState(false);   // после использование useState он вернет массив с 2мя значениями: 0 значение в массиве - параметр который мы передали при сохдании хука, в данном случае false, 1 значение в массиве - функция, которая может менять 0 значение в массиве\r\n    let [status, changeTypingStatus] = useState(props.userGlobalStateStatus);\r\n    // const { userGlobalStateStatus } = {...props};\r\n\r\n    useEffect(() => {\r\n        props.profilePageGetUserThunkCreator(props.match.params.userId);\r\n        props.profilePageGetUserStatusThunkCreator(props.match.params.userId);\r\n        changeTypingStatus(props.userGlobalStateStatus);\r\n    }, [props.userGlobalStateStatus]);\r\n\r\n    function activateEditMode() {\r\n        changeIsStatusEditModeActive(true);\r\n    }\r\n\r\n    function deActivateEditMode(message) {\r\n        changeIsStatusEditModeActive(false)\r\n        props.profilePageUpdateUserStatusThunkCreator(message);\r\n    }\r\n\r\n    function changeTypingStatusInHoock(message) {\r\n        changeTypingStatus(message);\r\n    }\r\n\r\n    // debugger\r\n    if (!props.isAuth) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <ProfilePageUserWithHooks\r\n            user={props.user}\r\n            isStatusEditModeActive={isStatusEditModeActive}\r\n            activateEditMode={activateEditMode}\r\n            deActivateEditMode={deActivateEditMode}\r\n            status={status}\r\n            changeTypingStatusInHoock={changeTypingStatusInHoock}\r\n            // isPreloaderActive={this.props.isPreloaderActive}\r\n            // localState={this.state}\r\n            // activateEditMode={this.activateEditMode.bind(this)}\r\n            // deActivateEditMode={this.deActivateEditMode.bind(this)}\r\n            // changeTypingStatusInLocalState={this.changeTypingStatusInLocalState.bind(this)}\r\n            userGlobalStateStatus={props.userGlobalStateStatus}\r\n        // userLocalStateStatus={this.state.status}\r\n        />\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.profilePage.user,\r\n        isPreloaderActive: state.preloaderActive.isPreloaderActive,\r\n        isAuth: state.auth.isLoggedIn,\r\n        userGlobalStateStatus: state.profilePage.status,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        // profilePageSetUserIntoState,\r\n        // preloaderActive,\r\n        profilePageGetUserThunkCreator,\r\n        profilePageGetUserStatusThunkCreator,\r\n        profilePageUpdateUserStatusThunkCreator\r\n    }),\r\n    // withAuthRedirect,\r\n    withRouter\r\n)(ProfilePageWithHooksUserContainer);","import ProfilePageFormContainer from './ProfilePageForm/ProfilePageFormContainer';\r\nimport ProfilePagePoster from './ProfilePagePoster/ProfilePagePoster';\r\nimport ProfilePagePostsContainer from './ProfilePagePosts/ProfilePagePostsContainer';\r\nimport ProfilePageUserContainerWithHooks from './ProfilePageUser/ProfilePageUserContainerWithHooks';\r\n\r\n\r\nconst ProfilePage = () => {\r\n    return (\r\n        <div className=\"profile-page\">\r\n            <ProfilePagePoster />\r\n\r\n            <ProfilePageUserContainerWithHooks />\r\n\r\n            <h3>My Posts</h3>\r\n\r\n            <ProfilePageFormContainer />\r\n\r\n            <ProfilePagePostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;"],"sourceRoot":""}